name: Build and Deploy Production

on:
  push:
    tags:
      - '1.*.*'

  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production

    steps:
      - name: Set up Docker image tags
        id: vars
        run: |
          echo "TAG_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Load 1password secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          REMOTE_HOST: 'op://chat-app/github-secrets/REMOTE_HOST_BUILDER'
          REMOTE_USER: 'op://chat-app/github-secrets/REMOTE_USER'
          SSH_PRIVATE_KEY: 'op://chat-app/github-secrets/SSH_PRIVATE_KEY_BUILDER'
          DOCKER_USERNAME: 'op://chat-app/github-secrets/DOCKER_USERNAME'
          DOCKER_PASSWORD: 'op://chat-app/github-secrets/DOCKER_PASSWORD'

      - name: Build docker image
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /home/jack/repos/basic-chat
            git pull
            export OP_SERVICE_ACCOUNT_TOKEN=${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
            echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

            ENVIRONMENT=production op inject -f -i .env.op -o .env && \
            docker build -t ${{ env.DOCKER_USERNAME }}/el-chat:${{ env.TAG_VERSION }} . && \
            docker push ${{ env.DOCKER_USERNAME }}/el-chat:${{ env.TAG_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: production
    needs: build

    steps:
      - name: Set up Docker image tags
        id: vars
        run: |
          echo "TAG_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Load 1password secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          REMOTE_HOST: 'op://chat-app/github-secrets/REMOTE_HOST'
          REMOTE_USER: 'op://chat-app/github-secrets/REMOTE_USER'
          DOCKER_USERNAME: 'op://chat-app/github-secrets/DOCKER_USERNAME'
          SSH_PRIVATE_KEY: 'op://chat-app/github-secrets/SSH_PRIVATE_KEY'

      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /home/jack/basic-chat
            git pull

            export OP_SERVICE_ACCOUNT_TOKEN=${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
            ENVIRONMENT=production op inject -f -i .env.op -o .env 
            echo "TAG_VERSION=${{ env.TAG_VERSION }}" >> .env

            echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin
            docker pull ${{ env.DOCKER_USERNAME }}/el-chat:${{ env.TAG_VERSION }}

            export $(grep -v '^#' .env | xargs) && \
            envsubst < docker-compose.production.yml | docker stack deploy --with-registry-auth -c - el-chat && \
            docker system prune -f && \
            curl -d "Deployment El Chat ${{ env.TAG_VERSION }} successful." https://notify.jackjakarta.xyz/deployments"
