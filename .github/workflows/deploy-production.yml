name: Build and deploy staging

on:
  # push:
  #   branches: [main]

  workflow_dispatch:

jobs:
  checks:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install PNPM
        run: npm install -g pnpm@9.15.3

      - name: Install dependencies
        run: pnpm install
      - name: Check formatting
        run: pnpm format:check
      - name: Check types
        run: pnpm types
      - name: Check linter
        run: pnpm lint
      - name: Check tests
        run: pnpm test

  build:
    name: Build and push docker image
    needs: checks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load 1password secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          DOCKER_USERNAME: 'op://chat-app/github-secrets/DOCKER_USERNAME'
          DOCKER_PASSWORD: 'op://chat-app/github-secrets/DOCKER_PASSWORD'

      - name: Build Docker image
        run: |
          docker build -f Dockerfile -t jackjakarta/chat-app:staging .

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ env.DOCKER_PASSWORD }}" | docker login --username ${{ env.DOCKER_USERNAME }} --password-stdin
          docker push jackjakarta/chat-app:staging

  # deploy:
  #   name: Deploy to staging
  #   timeout-minutes: 10
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Load 1password secrets
  #       uses: 1password/load-secrets-action@v1
  #       with:
  #         export-env: true
  #       env:
  #         OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
  #         REMOTE_HOST: 'op://chat-app/github-secrets/REMOTE_HOST'
  #         REMOTE_USER: 'op://chat-app/github-secrets/REMOTE_USER'
  #         SSH_PRIVATE_KEY: 'op://chat-app/github-secrets/SSH_PRIVATE_KEY'

  #     - name: Build and Deploy to remote server
  #       uses: appleboy/ssh-action@v0.1.6
  #       with:
  #         host: ${{ env.REMOTE_HOST }}
  #         username: ${{ env.REMOTE_USER }}
  #         key: ${{ env.SSH_PRIVATE_KEY }}
  #         script: |
  #           cd /home/${{ env.REMOTE_USER }}/basic-chat
  #           git pull && \
  #           docker stack deploy -c docker-compose.staging.yml klikr-staging && \
  #           docker system prune -f
